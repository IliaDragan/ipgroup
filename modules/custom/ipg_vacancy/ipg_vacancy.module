<?php
/**
 * @file
 * Provide custom IPGroup vacancy feedback page and hooks implementations.
 */

/**
 * Implements hook_menu().
 */
function ipg_vacancy_menu() {
  $items['vacancy-apply'] = array(
    'page callback' => 'ipg_vacancy_feedback_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function ipg_vacancy_feedback_page() {
  $nid = arg(1);
  $form = drupal_get_form('ipg_vacancy_feedback_form', $nid);

  return $form;
}

function ipg_vacancy_feedback_form($form, &$form_state, $nid) {
  $view = views_get_view('article');
  $view->set_display('vacancies_list_pane');
  $view->pre_execute();
  $view->execute();

  $vacancies = array();
  foreach ($view->result as $result) {
    $vacancies[$result->nid] = $result->node_title;
  }

  $form['vacancy'] = array(
    '#type' => 'select',
    '#title' => t('Vacancy'),
    '#options' => $vacancies,
    '#required' => TRUE,
    '#default_value' => $nid,
  );
  $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First name'),
    '#required' => TRUE,
    '#default_value' => NULL,
  );
  $form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last name'),
    '#required' => TRUE,
    '#default_value' => NULL,
  );
  $form['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail'),
    '#required' => TRUE,
    '#default_value' => NULL,
  );
  $form['text'] = array(
    '#type' => 'textarea',
    '#title' => t('Some comments'),
    '#default_value' => NULL,
  );
  $form['file'] = array(
    '#type' => 'file',
    '#title' => t('CV file'),
    '#default_value' => NULL,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
  );

  $wait_text = '<div id="form-wait-msg">' . t('Please wait ...') . '</div>';
  $form['#attached'] = array(
    'css' => array(
      drupal_get_path('module', 'ipg_vacancy') . '/css/ipg_vacancy.css',
    ),
    'js' => array(
      drupal_get_path('module', 'ipg_vacancy') . '/js/ipg_vacancy.js',
      array(
        'data' => array('vacancyFormWaitText' => $wait_text),
        'type' => 'setting',
      ),
    ),
  );

  return $form;
}

function ipg_vacancy_feedback_form_validate(&$form, &$form_state) {
  $values = $form_state['values'];

  if (!valid_email_address($values['mail'])){
    form_set_error('mail', t('The mail is invalid.'));
  }

  $file = file_save_upload('file', array());
  if ($file) {
    $form_state['storage']['file'] = $file;
  } else {
    form_set_error('file', t('No file was uploaded.'));
  }
}

function ipg_vacancy_feedback_form_submit(&$form, &$form_state) {
  global $language;
  $values = $form_state['values'];

  $params = $values;
  $params['vacancy'] = $form['vacancy']['#options'][$values['vacancy']];
  $params['file'] = $form_state['storage']['file'];

  drupal_mail('ipg_vacancy', 'ipg_vacancy_feedback', 'job@ipgroup.md', $language, $params, $from = NULL, $send = TRUE);
  drupal_set_message(t('Your application has been sent. We will contact you soon.'));
}

/**
 * Implements hook_mail().
 */
function ipg_vacancy_mail($key, &$message, $params) {
  if ($key == 'ipg_vacancy_feedback') {
    $variables = array(
      '%first_name' => $params['first_name'],
      '%last_name' => $params['last_name'],
      '%mail' => $params['mail'],
      '%text' => $params['text'],
      '%vacancy' => $params['vacancy'],
    );
    $attachment = array(
      'filecontent' => file_get_contents($params['file']->uri),
      'filename' => $params['file']->filename,
      'filemime' => $params['file']->filemime,
    );

    $subject = t('New request for %vacancy vacancy');
    $body = t('%first_name %last_name sent request for %vacancy vacancy.');
    $body .= "\n" . t('Contact email: %mail');
    if (!empty($params['text'])) {
      $body .= "\n" . t('Comment: %text');
    }

    $message['subject'] = strtr($subject, $variables);
    $message['body'][] = strtr($body, $variables);
    $message['params']['attachments'][] = $attachment;
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ipg_vacancy_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}
